"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ActiveDropdown = function (_React$Component) {
  _inherits(ActiveDropdown, _React$Component);

  function ActiveDropdown() {
    _classCallCheck(this, ActiveDropdown);

    return _possibleConstructorReturn(this, (ActiveDropdown.__proto__ || Object.getPrototypeOf(ActiveDropdown)).apply(this, arguments));
  }

  _createClass(ActiveDropdown, [{
    key: "setActiveClass",
    value: function setActiveClass() {
      if (this.props.activeRoutes.constructor === Array) {
        var childRouteIsActive = this.props.activeRoutes.find(function (element) {
          return element === window.location.pathname;
        });
        if (childRouteIsActive !== undefined) {
          return this.props.baseClassName + " active";
        }
      }
      return "" + this.props.baseClassName;
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "li",
        { className: "dropdown" },
        _react2.default.createElement(
          "a",
          { className: this.setActiveClass(), "data-toggle": "dropdown", role: "button", "aria-haspopup": "true", "aria-expanded": "false" },
          this.props.title,
          _react2.default.createElement("span", { className: "caret" })
        ),
        _react2.default.createElement(
          "ul",
          { className: "dropdown-menu" },
          this.props.children
        )
      );
    }
  }]);

  return ActiveDropdown;
}(_react2.default.Component);

ActiveDropdown.defaultProps = {
  baseClassName: '',
  activeRoutes: []
};

process.env.NODE_ENV !== "production" ? ActiveDropdown.propTypes = {
  activeRoutes: _react2.default.PropTypes.arrayOf.isRequired,
  baseClassName: _react2.default.PropTypes.string.isRequired,
  title: _react2.default.PropTypes.string.isRequired,
  children: _react2.default.PropTypes.shape.isRequired
} : void 0;

exports.default = ActiveDropdown;